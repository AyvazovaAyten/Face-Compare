{"version":3,"file":"ng-web-apis-intersection-observer.js","sources":["@ng-web-apis/intersection-observer/tokens/intersection-root.ts","@ng-web-apis/intersection-observer/tokens/intersection-root-margin.ts","@ng-web-apis/intersection-observer/utils/root-margin-factory.ts","@ng-web-apis/intersection-observer/tokens/intersection-threshold.ts","@ng-web-apis/intersection-observer/utils/threshold-factory.ts","@ng-web-apis/intersection-observer/directives/intersection-observer.directive.ts","@ng-web-apis/intersection-observer/services/intersection-observee.service.ts","@ng-web-apis/intersection-observer/directives/intersection-observee.directive.ts","@ng-web-apis/intersection-observer/directives/intersection-root.directive.ts","@ng-web-apis/intersection-observer/module.ts","@ng-web-apis/intersection-observer/tokens/support.ts","@ng-web-apis/intersection-observer/services/intersection-observer.service.ts"],"names":["tslib_1.__extends"],"mappings":"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","sourcesContent":["import {ElementRef, InjectionToken} from '@angular/core';\r\n\r\nexport const INTERSECTION_ROOT = new InjectionToken<ElementRef<Element>>(\r\n    'Root element for IntersectionObserver',\r\n);\r\n","import {InjectionToken} from '@angular/core';\r\n\r\nexport const INTERSECTION_ROOT_MARGIN_DEFAULT = '0px 0px 0px 0px';\r\nexport const INTERSECTION_ROOT_MARGIN = new InjectionToken<string>(\r\n    'rootMargin for IntersectionObserver',\r\n    {\r\n        providedIn: 'root',\r\n        factory: () => INTERSECTION_ROOT_MARGIN_DEFAULT,\r\n    },\r\n);\r\n","import {INTERSECTION_ROOT_MARGIN_DEFAULT} from '../tokens/intersection-root-margin';\r\n\r\nexport function rootMarginFactory(rootMargin: string | null): string {\r\n    return rootMargin || INTERSECTION_ROOT_MARGIN_DEFAULT;\r\n}\r\n","import {InjectionToken} from '@angular/core';\r\n\r\nexport const INTERSECTION_THRESHOLD_DEFAULT = 0;\r\nexport const INTERSECTION_THRESHOLD = new InjectionToken<number | number[]>(\r\n    'threshold for IntersectionObserver',\r\n    {\r\n        providedIn: 'root',\r\n        factory: () => INTERSECTION_THRESHOLD_DEFAULT,\r\n    },\r\n);\r\n","import {INTERSECTION_THRESHOLD_DEFAULT} from '../tokens/intersection-threshold';\r\n\r\nexport function thresholdFactory(threshold: string | null): number | number[] {\r\n    return threshold\r\n        ? threshold.split(',').map(parseFloat)\r\n        : INTERSECTION_THRESHOLD_DEFAULT;\r\n}\r\n","import {\r\n    Attribute,\r\n    Directive,\r\n    ElementRef,\r\n    Inject,\r\n    OnDestroy,\r\n    Optional,\r\n} from '@angular/core';\r\nimport {INTERSECTION_ROOT} from '../tokens/intersection-root';\r\nimport {rootMarginFactory} from '../utils/root-margin-factory';\r\nimport {thresholdFactory} from '../utils/threshold-factory';\r\n\r\n@Directive({\r\n    selector: '[waIntersectionObserver]',\r\n    exportAs: 'IntersectionObserver',\r\n})\r\nexport class IntersectionObserverDirective extends IntersectionObserver\r\n    implements OnDestroy {\r\n    private readonly callbacks = new Map<Element, IntersectionObserverCallback>();\r\n\r\n    constructor(\r\n        @Optional() @Inject(INTERSECTION_ROOT) root: ElementRef<Element> | null,\r\n        @Attribute('waIntersectionRootMargin') rootMargin: string | null,\r\n        @Attribute('waIntersectionThreshold') threshold: string | null,\r\n    ) {\r\n        super(\r\n            entries => {\r\n                this.callbacks.forEach((callback, element) => {\r\n                    const filtered = entries.filter(({target}) => target === element);\r\n\r\n                    return filtered.length && callback(filtered, this);\r\n                });\r\n            },\r\n            {\r\n                root: root && root.nativeElement,\r\n                rootMargin: rootMarginFactory(rootMargin),\r\n                threshold: thresholdFactory(threshold),\r\n            },\r\n        );\r\n    }\r\n\r\n    observe(target: Element, callback: IntersectionObserverCallback = () => {}) {\r\n        super.observe(target);\r\n        this.callbacks.set(target, callback);\r\n    }\r\n\r\n    unobserve(target: Element) {\r\n        super.unobserve(target);\r\n        this.callbacks.delete(target);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disconnect();\r\n    }\r\n}\r\n","import {ElementRef, Inject, Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {share} from 'rxjs/operators';\r\nimport {IntersectionObserverDirective} from '../directives/intersection-observer.directive';\r\n\r\n@Injectable()\r\nexport class IntersectionObserveeService extends Observable<IntersectionObserverEntry[]> {\r\n    constructor(\r\n        @Inject(ElementRef) {nativeElement}: ElementRef<Element>,\r\n        @Inject(IntersectionObserverDirective)\r\n        observer: IntersectionObserverDirective,\r\n    ) {\r\n        super(subscriber => {\r\n            observer.observe(nativeElement, entries => {\r\n                subscriber.next(entries);\r\n            });\r\n\r\n            return () => {\r\n                observer.unobserve(nativeElement);\r\n            };\r\n        });\r\n\r\n        return this.pipe(share());\r\n    }\r\n}\r\n","import {Directive, Inject} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {IntersectionObserveeService} from '../services/intersection-observee.service';\r\n\r\n// @dynamic\r\n@Directive({\r\n    selector: '[waIntersectionObservee]',\r\n    outputs: ['waIntersectionObservee'],\r\n    providers: [IntersectionObserveeService],\r\n})\r\nexport class IntersectionObserveeDirective {\r\n    constructor(\r\n        @Inject(IntersectionObserveeService)\r\n        readonly waIntersectionObservee: Observable<IntersectionObserverEntry[]>,\r\n    ) {}\r\n}\r\n","import {Directive, ElementRef} from '@angular/core';\r\nimport {INTERSECTION_ROOT} from '../tokens/intersection-root';\r\n\r\n@Directive({\r\n    selector: '[waIntersectionRoot]',\r\n    providers: [\r\n        {\r\n            provide: INTERSECTION_ROOT,\r\n            useExisting: ElementRef,\r\n        },\r\n    ],\r\n})\r\nexport class IntersectionRootDirective {}\r\n","import {NgModule} from '@angular/core';\r\nimport {IntersectionObserveeDirective} from './directives/intersection-observee.directive';\r\nimport {IntersectionObserverDirective} from './directives/intersection-observer.directive';\r\nimport {IntersectionRootDirective} from './directives/intersection-root.directive';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        IntersectionObserverDirective,\r\n        IntersectionObserveeDirective,\r\n        IntersectionRootDirective,\r\n    ],\r\n    exports: [\r\n        IntersectionObserverDirective,\r\n        IntersectionObserveeDirective,\r\n        IntersectionRootDirective,\r\n    ],\r\n})\r\nexport class IntersectionObserverModule {}\r\n","import {inject, InjectionToken} from '@angular/core';\r\nimport {WINDOW} from '@ng-web-apis/common';\r\n\r\n// TODO: Remove when moved to Angular 10\r\ndeclare global {\r\n    interface Window {\r\n        IntersectionObserver: IntersectionObserver;\r\n    }\r\n}\r\n\r\nexport const INTERSECTION_OBSERVER_SUPPORT = new InjectionToken<boolean>(\r\n    'Intersection Observer API support',\r\n    {\r\n        providedIn: 'root',\r\n        factory: () => !!inject(WINDOW).IntersectionObserver,\r\n    },\r\n);\r\n","import {ElementRef, Inject, Injectable, Optional} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {share} from 'rxjs/operators';\r\nimport {INTERSECTION_ROOT} from '../tokens/intersection-root';\r\nimport {INTERSECTION_ROOT_MARGIN} from '../tokens/intersection-root-margin';\r\nimport {INTERSECTION_THRESHOLD} from '../tokens/intersection-threshold';\r\nimport {INTERSECTION_OBSERVER_SUPPORT} from '../tokens/support';\r\n\r\n@Injectable()\r\nexport class IntersectionObserverService extends Observable<IntersectionObserverEntry[]> {\r\n    constructor(\r\n        @Inject(ElementRef) {nativeElement}: ElementRef<Element>,\r\n        @Inject(INTERSECTION_OBSERVER_SUPPORT) support: boolean,\r\n        @Inject(INTERSECTION_ROOT_MARGIN) rootMargin: string,\r\n        @Inject(INTERSECTION_THRESHOLD) threshold: number | number[],\r\n        @Optional() @Inject(INTERSECTION_ROOT) root: ElementRef<Element> | null,\r\n    ) {\r\n        super(subscriber => {\r\n            if (!support) {\r\n                subscriber.error('IntersectionObserver is not supported in your browser');\r\n\r\n                return;\r\n            }\r\n\r\n            const observer = new IntersectionObserver(\r\n                entries => {\r\n                    subscriber.next(entries);\r\n                },\r\n                {\r\n                    root: root && root.nativeElement,\r\n                    rootMargin,\r\n                    threshold,\r\n                },\r\n            );\r\n\r\n            observer.observe(nativeElement);\r\n\r\n            return () => {\r\n                observer.disconnect();\r\n            };\r\n        });\r\n\r\n        return this.pipe(share());\r\n    }\r\n}\r\n"]}