/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { IntersectionObserveeDirective } from './directives/intersection-observee.directive';
import { IntersectionObserverDirective } from './directives/intersection-observer.directive';
import { IntersectionRootDirective } from './directives/intersection-root.directive';
import * as ɵngcc0 from '@angular/core';
var IntersectionObserverModule = /** @class */ (function () {
    function IntersectionObserverModule() {
    }
IntersectionObserverModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: IntersectionObserverModule });
IntersectionObserverModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function IntersectionObserverModule_Factory(t) { return new (t || IntersectionObserverModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IntersectionObserverModule, { declarations: function () { return [IntersectionObserverDirective,
        IntersectionObserveeDirective,
        IntersectionRootDirective]; }, exports: function () { return [IntersectionObserverDirective,
        IntersectionObserveeDirective,
        IntersectionRootDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IntersectionObserverModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    IntersectionObserverDirective,
                    IntersectionObserveeDirective,
                    IntersectionRootDirective,
                ],
                exports: [
                    IntersectionObserverDirective,
                    IntersectionObserveeDirective,
                    IntersectionRootDirective,
                ]
            }]
    }], function () { return []; }, null); })();
    return IntersectionObserverModule;
}());
export { IntersectionObserverModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlcyI6WyJAbmctd2ViLWFwaXMvaW50ZXJzZWN0aW9uLW9ic2VydmVyL21vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN2QyxPQUFPLEVBQUMsNkJBQTZCLEVBQUMsTUFBTSw4Q0FBOEMsQ0FBQztBQUMzRixPQUFPLEVBQUMsNkJBQTZCLEVBQUMsTUFBTSw4Q0FBOEMsQ0FBQztBQUMzRixPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSwwQ0FBMEMsQ0FBQzs7QUFFbkY7QUFFNkIsSUFGN0I7QUFFTyxJQVVrQyxDQUFDO2dFQVp6QyxRQUFRLFNBQUM7T0FDTixZQUFZLEVBQUUsMkJBQ1YsNkJBQTZCLDJCQUM3Qiw2QkFBNkIsMkJBQzdCO2FBQXlCLHdCQUM1Qix1QkFDRCxPQUFPLEVBQUUsMkJBQ0wsNkJBQTZCLDJCQUM3Qiw2QkFBNkI7bUJBQzdCO0tBQXlCLHdCQUM1QixvQkFDSjs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0RBQ1E7QUFBRSxJQUE4QixpQ0FBQztBQUN6QyxDQUR5QyxBQVoxQyxJQVkwQzs7QUFqQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFZQSxBQUFBLEFBWkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBWkEsQUFZQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge05nTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtJbnRlcnNlY3Rpb25PYnNlcnZlZURpcmVjdGl2ZX0gZnJvbSAnLi9kaXJlY3RpdmVzL2ludGVyc2VjdGlvbi1vYnNlcnZlZS5kaXJlY3RpdmUnO1xyXG5pbXBvcnQge0ludGVyc2VjdGlvbk9ic2VydmVyRGlyZWN0aXZlfSBmcm9tICcuL2RpcmVjdGl2ZXMvaW50ZXJzZWN0aW9uLW9ic2VydmVyLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7SW50ZXJzZWN0aW9uUm9vdERpcmVjdGl2ZX0gZnJvbSAnLi9kaXJlY3RpdmVzL2ludGVyc2VjdGlvbi1yb290LmRpcmVjdGl2ZSc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gICAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICAgICAgSW50ZXJzZWN0aW9uT2JzZXJ2ZXJEaXJlY3RpdmUsXHJcbiAgICAgICAgSW50ZXJzZWN0aW9uT2JzZXJ2ZWVEaXJlY3RpdmUsXHJcbiAgICAgICAgSW50ZXJzZWN0aW9uUm9vdERpcmVjdGl2ZSxcclxuICAgIF0sXHJcbiAgICBleHBvcnRzOiBbXHJcbiAgICAgICAgSW50ZXJzZWN0aW9uT2JzZXJ2ZXJEaXJlY3RpdmUsXHJcbiAgICAgICAgSW50ZXJzZWN0aW9uT2JzZXJ2ZWVEaXJlY3RpdmUsXHJcbiAgICAgICAgSW50ZXJzZWN0aW9uUm9vdERpcmVjdGl2ZSxcclxuICAgIF0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJbnRlcnNlY3Rpb25PYnNlcnZlck1vZHVsZSB7fVxyXG4iXX0=